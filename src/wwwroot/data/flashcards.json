[
  {
    "Id": "1",
    "CategoryId": "OOP",
    "Question": "What are the four pillars of OOP?",
    "Answer": "Encapsulation, inheritance, polymorphism, and abstraction.",
    "Difficulty": "Easy",
    "Url": ""
  },
  {
    "Id": "2",
    "CategoryId": "OOP",
    "Question": "What is polymorphism and how is it implemented in OOP?",
    "Answer": "Polymorphism allows objects of different types to be treated as a common type. It's implemented through method overriding and interfaces, enabling methods to behave differently based on the object.",
    "Difficulty": "Medium",
    "Url": ""
  },
  {
    "Id": "3",
    "CategoryId": "OOP",
    "Question": "What is encapsulation and why is it important?",
    "Answer": "Encapsulation is the bundling of data (attributes) and methods (functions) into a single unit or class, restricting access to certain components. It protects object integrity and promotes modular, maintainable code.",
    "Difficulty": "Easy",
    "Url": ""
  },
  {
    "Id": "4",
    "CategoryId": "Python",
    "Question": "What is a Python dictionary and how do you access its elements?",
    "Answer": "Dictionary is a collection of key-value pairs, defined with curly braces { }. Elements are accessed by their key, e.g., my_dict[\"key\"].",
    "Difficulty": "Easy",
    "Url": ""
  },
  {
    "Id": "5",
    "CategoryId": "Python",
    "Question": "How do you handle exceptions in Python?",
    "Answer": "Exceptions in Python are handled using the try, except, and optionally finally blocks.",
    "Difficulty": "Easy",
    "Url": ""
  },
  {
    "Id": "6",
    "CategoryId": "Python",
    "Question": "What is the difference between a list and a tuple in Python?",
    "Answer": "A List is Mutable (can be modified after creation) and defined with square brackets [ ]. A tuple is Immutable (cannot be modified after creation) and defined with parentheses ( ).",
    "Difficulty": "Easy",
    "Url": ""
  }
]