@page
@using ContosoCrafts.WebSite.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ContosoCrafts.WebSite.Pages.FlashcardAdmin.CreateModel
@{
    ViewData["Title"] = "Create Flashcard";
}

<h3 class="admin-title">Create Flashcard</h3>
<!-- Form Structure -->
<div class="form-container">
    <form method="post">

        <!-- Category Dropdown -->
        <div>
            <label asp-for="Flashcard.CategoryId">Category</label>
            <select asp-for="Flashcard.CategoryId" class="form-control">
                @foreach (CategoryTypeEnum category in Enum.GetValues(typeof(CategoryTypeEnum)))
                {
                    <option value="@category.ToString()">@category.DisplayName()</option>
                }
            </select>
        </div>

        <!-- Question, cannot be empty -->
        <div style="position: relative;">
            <label for="Question">Question</label>
            <small>Max 100 characters</small>
            <span asp-validation-for="Flashcard.Question" class="text-danger font-weight-bold"></span>
            <input type="text" id="Question" name="Flashcard.Question" value="@Model.Flashcard.Question" maxlength="100" placeholder="Enter your question here" style="width: 100%;" oninput="updateCharCount(this, 'question-char-count', 100)" />
            <div class="char-count" id="question-char-count">0/100</div>
        </div>

        <!-- Answer, cannot be empty -->
        <div style="position: relative; margin-top: 20px;">
            <label for="Answer">Answer</label>
            <small>Max 250 characters</small>
            <span asp-validation-for="Flashcard.Answer" class="text-danger font-weight-bold"></span>
            <textarea id="Answer" name="Flashcard.Answer" rows="3" style="width: 100%; resize: none;" maxlength="250" placeholder="Enter your answer here" oninput="updateCharCount(this, 'answer-char-count', 250)">@Model.Flashcard.Answer</textarea>
            <div class="char-count" id="answer-char-count">0/250</div>
        </div>

        <!-- Difficulty Level Numeric Input-->
        <div>
            <label asp-for="Flashcard.DifficultyLevel">Difficulty Level</label>
            <small>Enter 1 for Easy, 2 for Medium, or 3 for Hard.</small>
            <span asp-validation-for="Flashcard.DifficultyLevel" class="text-danger font-weight-bold"></span>
            <input type="number"
                   step="1" min="1" max="3"
                   asp-for="Flashcard.DifficultyLevel"
                   placeholder="Enter 1, 2, or 3"
                   class="form-control"
                   value=""/>
        </div>

        <!-- Additional Resources Url -->
        <div class="gap">
            <label asp-for="Flashcard.Url">Additional Resource (URL)</label>
            <span asp-validation-for="Flashcard.Url" class="text-danger font-weight-bold"></span>
            @if (ViewData["UrlError"] != null)
            {
                <div class="text-danger font-weight-bold">@ViewData["UrlError"]</div>
            }
            <input type="text" asp-for="Flashcard.Url" placeholder="Enter a helpful link, e.g., https://example.com"/>
        </div>

        <!-- Open Count (readonly, preset to 0) -->
        <div>
            <label asp-for="Flashcard.OpenCount">Open Count</label>
            <input type="text" asp-for="Flashcard.OpenCount" readonly class="readonly-input"/>
        </div>

        <div class="button-container">
            <!-- Cancel Button -->
            <a asp-page="/FlashcardAdmin/Index" asp-route-id="@Model.Flashcard.Id" class="cancel-btn">Cancel</a>

            <!-- Create Button -->
            <input type="submit" value="Create" class="submit-btn"/>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function updateCharCount(input, countId, maxLength) {
            const currentLength = input.value.length;
            document.getElementById(countId).textContent = `${currentLength}/${maxLength}`;
        }

        // Initialize the character count on page load
        document.addEventListener('DOMContentLoaded', function () {
            const questionInput = document.getElementById('Question');
            const answerInput = document.getElementById('Answer');

            updateCharCount(questionInput, 'question-char-count', 100);
            updateCharCount(answerInput, 'answer-char-count', 250);
        });
    </script>
}